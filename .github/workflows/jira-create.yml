name: Create Jira Task from GitHub Issue

on:
  issues:
    types: [opened]

jobs:
  create-jira-task:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare payload
        run: |
          set -e
          GH_TITLE="${{ github.event.issue.title }}"
          GH_BODY="${{ github.event.issue.body }}"
          GH_URL="${{ github.event.issue.html_url }}"

          DESC_FULL="GitHub Issue: $GH_URL\n\n$GH_BODY"

          jq -n \
            --arg project "${{ secrets.JIRA_PROJECT }}" \
            --arg summary "$GH_TITLE" \
            --arg desc "$DESC_FULL" \
            --arg itype "Task" \
            '{fields:{
              project:{key:$project},
              summary:$summary,
              description:$desc,
              issuetype:{name:$itype}
            }}' > payload.json

          echo "Payload generated:"
          cat payload.json

      - name: Create Jira issue
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_EMAIL:     ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        run: |
          RESP=$(curl -sS -w ":%{http_code}" -u "$JIRA_EMAIL:$JIRA_API_TOKEN" \
            -H "Content-Type: application/json" \
            --data @payload.json \
            "$JIRA_BASE_URL/rest/api/3/issue")

          BODY="${RESP%:*}"
          CODE="${RESP##*:}"

          echo "HTTP $CODE"
          echo "$BODY" > response.json
          cat response.json

          if [ "$CODE" -ge 200 ] && [ "$CODE" -lt 300 ]; then
            KEY=$(jq -r '.key' response.json)
            echo "Jira Task created: $KEY"
          else
            echo "Jira create failed"
            exit 1
          fi
